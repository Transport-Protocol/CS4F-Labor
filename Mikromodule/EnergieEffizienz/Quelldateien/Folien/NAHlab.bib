
@inproceedings{pereira_energy_2017,
	address = {New York, NY, USA},
	series = {{SLE} 2017},
	title = {Energy efficiency across programming languages: how do energy, time, and memory relate?},
	isbn = {978-1-4503-5525-4},
	shorttitle = {Energy efficiency across programming languages},
	url = {https://dl.acm.org/doi/10.1145/3136014.3136031},
	doi = {10.1145/3136014.3136031},
	abstract = {This paper presents a study of the runtime, memory usage and energy consumption of twenty seven well-known software languages. We monitor the performance of such languages using ten different programming problems, expressed in each of the languages. Our results show interesting findings, such as, slower/faster languages consuming less/more energy, and how memory usage influences energy consumption. Finally, we show how to use our results to provide software engineers support to decide which language to use when energy efficiency is a concern.},
	urldate = {2023-11-13},
	booktitle = {Proceedings of the 10th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
	publisher = {Association for Computing Machinery},
	author = {Pereira, Rui and Couto, Marco and Ribeiro, Francisco and Rua, Rui and Cunha, Jácome and Fernandes, João Paulo and Saraiva, João},
	month = oct,
	year = {2017},
	keywords = {Energy Efficiency, Programming Languages, Green Software, Language Benchmarking},
	pages = {256--267},
	file = {Full Text PDF:C\:\\Users\\julia\\Zotero\\storage\\I4G58PW7\\Pereira et al. - 2017 - Energy efficiency across programming languages ho.pdf:application/pdf},
}

@incollection{cascaval_folklore_2014,
	address = {Cham},
	title = {Folklore {Confirmed}: {Compiling} for {Speed} \$\$=\$\$ {Compiling} for {Energy}},
	volume = {8664},
	isbn = {978-3-319-09966-8 978-3-319-09967-5},
	shorttitle = {Folklore {Confirmed}},
	url = {https://link.springer.com/10.1007/978-3-319-09967-5_10},
	language = {en},
	urldate = {2023-11-13},
	booktitle = {Languages and {Compilers} for {Parallel} {Computing}},
	publisher = {Springer International Publishing},
	author = {Yuki, Tomofumi and Rajopadhye, Sanjay},
	editor = {Cașcaval, Călin and Montesinos, Pablo},
	year = {2014},
	doi = {10.1007/978-3-319-09967-5_10},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {169--184},
	file = {Yuki und Rajopadhye - 2014 - Folklore Confirmed Compiling for Speed \$\$=\$\$ Comp.pdf:C\:\\Users\\julia\\Zotero\\storage\\TKHKRFVH\\Yuki und Rajopadhye - 2014 - Folklore Confirmed Compiling for Speed \$\$=\$\$ Comp.pdf:application/pdf},
}

@article{trefethen_energy-aware_2013,
	series = {Scalable {Algorithms} for {Large}-{Scale} {Systems} {Workshop} ({ScalA2011}), {Supercomputing} 2011},
	title = {Energy-aware software: {Challenges}, opportunities and strategies},
	volume = {4},
	issn = {1877-7503},
	shorttitle = {Energy-aware software},
	url = {https://www.sciencedirect.com/science/article/pii/S1877750313000173},
	doi = {10.1016/j.jocs.2013.01.005},
	abstract = {Energy consumption of computing systems has become a major concern. Constrained by cost, environmental concerns and policy, minimising the energy foot-print of computing systems is one of the primary goals of many initiatives. As we move towards exascale computing, energy constraints become very real and are a major driver in design decisions. The issue is also apparent at the scale of desk top machines, where many core and accelerator chips are common and offer a spectrum of opportunities for balancing energy and performance. Conventionally, approaches for reducing energy consumption have been either at the operational level (such as powering down all or part of systems) or at the hardware design level (such as utilising specialised low-energy components). In this paper, we are interested in a different approach; energy-aware software. By measuring the energy consumption of a computer application and understanding where the energy usage lies, may allow a change of the software to provide opportunities for energy savings. In order to understand the complexities of this approach, we specifically look at multithreaded algorithms and applications. By an evaluation of a benchmark suite on multiple architectures and multiple environments, we show how basic parameters, such as threading options, compilers and frequencies, can impact energy consumption. As such, we provide an overview of the challenges that face software developers in this regard. We then offer a view of the directions that need to be taken and possible strategies needed for building energy-aware software.},
	number = {6},
	urldate = {2023-11-13},
	journal = {Journal of Computational Science},
	author = {Trefethen, Anne E. and Thiyagalingam, Jeyarajan},
	month = nov,
	year = {2013},
	pages = {444--449},
	file = {ScienceDirect Snapshot:C\:\\Users\\julia\\Zotero\\storage\\IQ8XH5V7\\S1877750313000173.html:text/html},
}

@inproceedings{georgiou_analyzing_2017,
	address = {New York, NY, USA},
	series = {{PCI} '17},
	title = {Analyzing {Programming} {Languages}' {Energy} {Consumption}: {An} {Empirical} {Study}},
	isbn = {978-1-4503-5355-7},
	shorttitle = {Analyzing {Programming} {Languages}' {Energy} {Consumption}},
	url = {https://doi.org/10.1145/3139367.3139418},
	doi = {10.1145/3139367.3139418},
	abstract = {Motivation: The energy efficiency of it-related products, from the software perspective, has gained vast popularity the recent years and paved a new emerging research field. However, there is limited number of research works regarding the energy consumption of relatively small programming tasks. This knowledge is critical to be known especially in cases where millions of small tasks are running in parallel on multiple devices all around the globe. Goal: In this preliminary study, we aim to identify energy implications of small, independent tasks developed in different programming languages; compiled, semi-compiled, and interpreted ones. Method: To achieve our purpose, we collected, refined, compared, and analyzed a number of implemented tasks from Rosetta Code, that is a publicly available Repository for programming chrestomathy. Results: Our analysis shows that among compiled programming languages such as C, C++, Java, and Go offer the highest energy efficiency for all of our tested tasks compared to C\#, VB.Net, and Rust. Regarding interpreted programming languages PHP, Ruby, and JavaScript exhibit the most energy savings compared to Swift, R, Perl, and Python.},
	urldate = {2023-11-13},
	booktitle = {Proceedings of the 21st {Pan}-{Hellenic} {Conference} on {Informatics}},
	publisher = {Association for Computing Machinery},
	author = {Georgiou, Stefanos and Kechagia, Maria and Spinellis, Diomidis},
	month = sep,
	year = {2017},
	keywords = {Energy Efficiency, Energy Optimization, Programming Languages},
	pages = {1--6},
}


@article{brown_toward_2010,
	title = {Toward energy-efficient computing},
	volume = {53},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/1666420.1666438},
	doi = {10.1145/1666420.1666438},
	abstract = {What will it take to make server-side computing more energy efficient?},
	language = {en},
	number = {3},
	urldate = {2023-08-15},
	journal = {Commun. ACM},
	author = {Brown, David J. and Reams, Charles},
	month = mar,
	year = {2010},
	pages = {50--58},
	file = {Brown und Reams - 2010 - Toward energy-efficient computing.pdf:C\:\\Users\\julia\\Zotero\\storage\\M6CVNIWN\\Brown und Reams - 2010 - Toward energy-efficient computing.pdf:application/pdf},
}

@misc{wikipedia_energy_2023,
	title = {Energy proportional computing},
	author = {wikipedia},
	url = {https://en.wikipedia.org/w/index.php?title=Energy_proportional_computing&oldid=1166506373},
	abstract = {In computing, energy proportionality is a measure of the relationship between power consumed in a computer system, and the rate at which useful work is done (its utilization, which is one measure of performance). If the overall power consumption is proportional to the computer's utilization, then the machine is said to be energy proportional. Equivalently stated, for an idealized energy proportional computer, the overall energy per operation (a measure of energy efficiency)  is constant for all possible workloads and operating conditions. 
The concept was first proposed in 2007 by Google engineers Luiz André Barroso and Urs Hölzle, who urged computer architects to design servers that would be much more energy efficient for the datacenter setting.Energy proportional computing is currently an area of active research, and has been highlighted as an important design goal for cloud computing. There are many technical challenges remaining in the design of energy proportional computers. Furthermore, the concept of energy proportionality is not inherently restricted to computing. Although countless energy efficiency advances have been made in non-computing disciplines, they have not been evaluated rigorously in terms of their energy proportionality.},
	language = {en},
	copyright = {Creative Commons Attribution-ShareAlike License},
	urldate = {2023-08-15},
	journal = {Wikipedia},
	year = {2023}
}

@misc{grunwald_energy_2022,
	title = {Energy consumption of {ICT} infrastructure},
	url = {https://publikationen.bibliothek.kit.edu/1000152733},
	abstract = {Due to omnipresent digitisation, the energy consumption of information and communication technology (ICT), i. e. of digital end devices, data centres and telecommunications networks, is becoming more and more important. Between 2015 and 2020, the annual energy demand of data centres and transmission grids in Germany increased by around 5.4 TWh. This corresponds to an increase of 30 \%. Existing efficiency and saving potentials must be consistently tapped in order to slow down the current growth in consumption. In the TAB report, blockchain applications, private internet use and smart energy management in buildings have been examined in depth.},
	language = {de},
	urldate = {2023-12-08},
	author = {Grünwald, Reinhard and Caviezel, Claudio},
	year = {2022},
	doi = {10.5445/IR/1000152733},
	note = {ISSN: 2364-2645},
	file = {Full Text PDF:C\:\\Users\\julia\\Zotero\\storage\\64BBDU58\\Grünwald und Caviezel - 2022 - Energy consumption of ICT infrastructure.pdf:application/pdf},
}


@inproceedings{noureddine-ie-2022,
  title = {PowerJoular and JoularJX: Multi-Platform Software Power Monitoring Tools},
  author = {Noureddine, Adel},
  booktitle = {18th International Conference on Intelligent Environments (IE2022)},
  address = {Biarritz, France},
  year = {2022},
  month = {Jun},
  keywords = {Power Monitoring; Measurement; Power Consumption; Energy Analysis}
}



@misc{iea_net_zero2023,
	title = {Net {Zero} {Roadmap}: {A} {Global} {Pathway} to {Keep} the 1.5 $^\circ${C} {Goal} in {Reach} – {Analysis}},
	shorttitle = {Net {Zero} {Roadmap}},
	author = {iea},
	url = {https://www.iea.org/reports/net-zero-roadmap-a-global-pathway-to-keep-the-15-0c-goal-in-reach},
	abstract = {Net Zero Roadmap: A Global Pathway to Keep the 1.5 °C Goal in Reach - Analysis and key findings. A report by the International Energy Agency.},
  year = {2023},
	language = {en-GB},
	urldate = {2023-12-08},
	journal = {IEA},
	file = {Snapshot:C\:\\Users\\julia\\Zotero\\storage\\CA7PKPST\\progress-in-the-clean-energy-transition.html:text/html},
}



@inproceedings{wong_retrospective_2015,
	title = {A {Retrospective} {Look} {Back} on the {Road} {Towards} {Energy} {Proportionality}},
	url = {https://ieeexplore.ieee.org/document/7314153},
	doi = {10.1109/IISWC.2015.18},
	abstract = {In this paper, we take a retrospective look back at the road taken towards improving energy proportionality, in order to find out where we are currently, and how we got here. Through statistical regression of published SPEC power results, were able to identify and quantify the sources of past EP improvements.},
	urldate = {2023-12-10},
	booktitle = {2015 {IEEE} {International} {Symposium} on {Workload} {Characterization}},
	author = {Wong, Daniel and Chen, Julia and Annavaram, Murali},
	month = oct,
	year = {2015},
	pages = {110--111},
	file = {IEEE Xplore Full Text PDF:C\:\\Users\\julia\\Zotero\\storage\\QJP84J7V\\Wong et al. - 2015 - A Retrospective Look Back on the Road Towards Ener.pdf:application/pdf},
}


@inproceedings{lima_haskell_2016,
	title = {Haskell in {Green} {Land}: {Analyzing} the {Energy} {Behavior} of a {Purely} {Functional} {Language}},
	volume = {1},
	shorttitle = {Haskell in {Green} {Land}},
	url = {https://ieeexplore.ieee.org/document/7476671},
	doi = {10.1109/SANER.2016.85},
	abstract = {Recent work has studied the effect that factors such as code obfuscation, refactorings and data types have on energy efficiency. In this paper, we attempt to shed light on the energy behavior of programs written in a lazy purely functional language, Haskell. We have conducted two empirical studies to analyze the energy efficiency of Haskell programs from two different perspectives: strictness and concurrency. Our experimental space exploration comprises more than 2000 configurations and 20000 executions. We found out that small changes can make a big difference in terms of energy consumption. For example, in one of our benchmarks, under a specific configuration, choosing one data sharing primitive (MVar) over another (TMVar) can yield 60\% energy savings. In another benchmark, the latter primitive can yield up to 30\% energy savings over the former. Thus, tools that support developers in quickly refactoring a program to switch between different primitives can be of great help if energy is a concern. In addition, the relationship between energy consumption and performance is not always clear. In sequential benchmarks, high performance is an accurate proxy for low energy consumption. However, for one of our concurrent benchmarks, the variants with the best performance also exhibited the worst energy consumption. To support developers in better understanding this complex relationship, we have extended two existing performance analysis tools to also collect and present data about energy consumption.},
	urldate = {2023-12-10},
	booktitle = {2016 {IEEE} 23rd {International} {Conference} on {Software} {Analysis}, {Evolution}, and {Reengineering} ({SANER})},
	author = {Lima, Luís Gabriel and Soares-Neto, Francisco and Lieuthier, Paulo and Castor, Fernando and Melfe, Gilberto and Fernandes, João Paulo},
	month = mar,
	year = {2016},
	pages = {517--528},
}


@article{pinto_energy_2017,
	title = {Energy efficiency: a new concern for application software developers},
	volume = {60},
	issn = {0001-0782, 1557-7317},
	shorttitle = {Energy efficiency},
	url = {https://dl.acm.org/doi/10.1145/3154384},
	doi = {10.1145/3154384},
	abstract = {Development of energy-efficient software is hindered by a lack of knowledge and a lack of tools.},
	language = {en},
	number = {12},
	urldate = {2023-10-09},
	journal = {Communications of the ACM},
	author = {Pinto, Gustavo and Castor, Fernando},
	month = nov,
	year = {2017},
	pages = {68--75},
	file = {Pinto und Castor - 2017 - Energy efficiency a new concern for application s.pdf:C\:\\Users\\julia\\Zotero\\storage\\DTY5AGP7\\Pinto und Castor - 2017 - Energy efficiency a new concern for application s.pdf:application/pdf},
}


@article{santarius_digital_2023,
	title = {Digital sufficiency: conceptual considerations for {ICTs} on a finite planet},
	volume = {78},
	issn = {1958-9395},
	shorttitle = {Digital sufficiency},
	url = {https://doi.org/10.1007/s12243-022-00914-x},
	doi = {10.1007/s12243-022-00914-x},
	abstract = {ICT hold significant potential to increase resource and energy efficiencies and contribute to a circular economy. Yet unresolved is whether the aggregated net effect of ICT overall mitigates or aggravates environmental burdens. While the savings potentials have been explored, drivers that prevent these and possible counter measures have not been researched thoroughly. The concept digital sufficiency constitutes a basis to understand how ICT can become part of the essential environmental transformation. Digital sufficiency consists of four dimensions, each suggesting a set of strategies and policy proposals: (a) hardware sufficiency, which aims for fewer devices needing to be produced and their absolute energy demand being kept to the lowest level possible to perform the desired tasks; (b) software sufficiency, which covers ensuring that data traffic and hardware utilization during application are kept as low as possible; (c) user sufficiency, which strives for users applying digital devices frugally and using ICT in a way that promotes sustainable lifestyles; and (d) economic sufficiency, which aspires to digitalization supporting a transition to an economy characterized not by economic growth as the primary goal but by sufficient production and consumption within planetary boundaries. The policies for hardware and software sufficiency are relatively easily conceivable and executable. Policies for user and economic sufficiency are politically more difficult to implement and relate strongly to policies for environmental transformation in general. This article argues for comprehensive policies for digital sufficiency, which are indispensible if ICT are to play a beneficial role in overall environmental transformation.},
	language = {en},
	number = {5},
	urldate = {2023-08-25},
	journal = {Annals of Telecommunications},
	author = {Santarius, Tilman and Bieser, Jan C. T. and Frick, Vivian and Höjer, Mattias and Gossen, Maike and Hilty, Lorenz M. and Kern, Eva and Pohl, Johanna and Rohde, Friederike and Lange, Steffen},
	month = jun,
	year = {2023},
	keywords = {Green IT, Degrowth, Economic growth, ICT for sustainability, Rebound effects, Sustainable production and consumption, Sustainable software},
	pages = {277--295},
	file = {Full Text PDF:C\:\\Users\\julia\\Zotero\\storage\\FW8EDEID\\Santarius et al. - 2023 - Digital sufficiency conceptual considerations for.pdf:application/pdf},
}
